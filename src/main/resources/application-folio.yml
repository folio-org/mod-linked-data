mod-linked-data:
  reindex:
    page-size: 1000
  kafka:
    topic:
      work-search-index: linked-data.work
      authority-search-index: linked-data.authority
      instance-ingress: inventory.instance_ingress

folio:
  environment: ${ENV:folio}
  okapiUrl: ${okapi.url}
  tenant:
    validation:
      enabled: true
  logging:
    request:
      enabled: true
    feign:
      enabled: true
  retry:
    enabled: true
  kafka:
    listener:
      source-record-domain-event:
        concurrency: ${KAFKA_SOURCE_RECORD_DOMAIN_EVENT_CONCURRENCY:1}
        topic-pattern: ${KAFKA_SOURCE_RECORD_DOMAIN_EVENT_TOPIC_PATTERN:(${folio.environment}\.)(.*\.)srs.source_records}
        group-id: ${folio.environment}-linked-data-source-record-domain-event-group
      inventory-instance-event:
        concurrency: ${KAFKA_INVENTORY_INSTANCE_EVENT_CONCURRENCY:1}
        topic-pattern: ${KAFKA_INVENTORY_INSTANCE_EVENT_TOPIC_PATTERN:(${folio.environment}\.)(.*\.)inventory.instance}
        group-id: ${folio.environment}-linked-data-inventory-instance-event-group
    retry-interval-ms: ${KAFKA_RETRY_INTERVAL_MS:2000}
    retry-delivery-attempts: ${KAFKA_RETRY_DELIVERY_ATTEMPTS:6}
    topics:
      - name: ${mod-linked-data.kafka.topic.work-search-index:linked-data.work}
        numPartitions: ${KAFKA_BIBFRAME_TOPIC_PARTITIONS:3}
        replicationFactor: ${KAFKA_BIBFRAME_TOPIC_REPLICATION_FACTOR:}
      - name: ${mod-linked-data.kafka.topic.authority-search-index:linked-data.authority}
        numPartitions: ${KAFKA_BIBFRAME_TOPIC_PARTITIONS:3}
        replicationFactor: ${KAFKA_BIBFRAME_TOPIC_REPLICATION_FACTOR:}

spring:
  kafka:
    bootstrap-servers: ${KAFKA_HOST:kafka}:${KAFKA_PORT:9092}
    consumer:
      max-poll-records: ${KAFKA_CONSUMER_MAX_POLL_RECORDS:200}
    security:
      protocol: ${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
    ssl:
      key-store-password: ${KAFKA_SSL_KEYSTORE_PASSWORD:}
      key-store-location: ${KAFKA_SSL_KEYSTORE_LOCATION:}
      trust-store-password: ${KAFKA_SSL_TRUSTSTORE_PASSWORD:}
      trust-store-location: ${KAFKA_SSL_TRUSTSTORE_LOCATION:}
    producer:
      acks: all
      properties:
        enable.idempotence: true
        max.in.flight.requests.per.connection: 5
        retries: 5
        spring.json.add.type.headers: false
