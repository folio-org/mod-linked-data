openapi: 3.0.0
info:
  title: Linked Data API
  version: v1
  description: Linked Data service API

paths:
  /linked-data/reindex:
    put:
      operationId: reindex
      tags:
        - reindex
      description: Start the process of reindexing of resources in the database
      parameters:
        - $ref: '#/components/parameters/full'
      responses:
        '204':
          description: Started the process of reindex
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'

  /linked-data/resource:
    post:
      operationId: createResource
      tags:
        - resource
      description: Create a Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: schema/resourceRequestDto.json
      responses:
        '200':
          description: Created resource
          content:
            application/json:
              schema:
                $ref: schema/resourceResponseDto.json
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'

  /linked-data/resource/{id}:
    get:
      operationId: getResourceById
      tags:
        - resource
      description: Get a resource by id
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Resource as json string
          content:
            application/json:
              schema:
                $ref: schema/resourceResponseDto.json
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '404':
          description: No Resource is found by id
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
    put:
      operationId: updateResource
      tags:
        - resource
      description: Update a resource by id
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        content:
          application/json:
            example: example/resourceRequest.sample
            schema:
              $ref: schema/resourceRequestDto.json
      responses:
        '200':
          description: Updated resource
          content:
            application/json:
              schema:
                $ref: schema/resourceResponseDto.json
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '404':
         description: No resource is found by id
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'
    delete:
      operationId: deleteResource
      tags:
        - resource
      description: Delete a resource by id
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '204':
          description: Resource deleted
        '404':
          description: No resource is found by id
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'

  /linked-data/resource/{id}/marc:
    get:
      operationId: getResourceMarcViewById
      tags:
        - resource
      description: Get a marc view of resource by id
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Marc view of resource as json string
          content:
            application/json:
              schema:
                $ref: schema/resourceMarcViewDto.json
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '404':
          description: No Resource is found by id
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'

  /linked-data/resource/metadata/{inventoryId}/id:
    get:
      operationId: getResourceIdByResourceInventoryId
      tags:
        - resource
      description: Get id of a resource by its inventory id
      parameters:
        - $ref: '#/components/parameters/inventoryId'
      responses:
        '200':
          description: Json object with id of a resource
          content:
            application/json:
              schema:
                $ref: schema/resourceIdDto.json
        '404':
          description: No resource id is found by its inventory id

  /linked-data/inventory-instance/{inventoryId}/import-supported:
    get:
      operationId: isSupportedByInventoryId
      tags:
        - resource
      description: Check if marc to bib conversion is supported
      parameters:
        - $ref: '#/components/parameters/inventoryId'
      responses:
        '200':
          description: true if marc to bib conversion is supported and false if not supported
          content:
            text/plain:
              schema:
                type: string
                example: true|false
        '404':
          description: No Record is found by inventory id
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'

  /linked-data/inventory-instance/{inventoryId}/preview:
    get:
      operationId: getResourcePreviewByInventoryId
      tags:
        - resource
      description: Get the preview of a resource
      parameters:
        - $ref: '#/components/parameters/inventoryId'
      responses:
        '200':
          description: Resource as json string
          content:
            application/json:
              schema:
                $ref: schema/resourceResponseDto.json
        '404':
          description: No Record is found by inventory id
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'

  /linked-data/inventory-instance/{inventoryId}/import:
    post:
      operationId: importMarcRecord
      tags:
        - resource
      description: Create a Resource derived from MARC record
      parameters:
        - $ref: '#/components/parameters/inventoryId'
      responses:
        '201':
          description: Json object with id of a resource
          content:
            application/json:
              schema:
                $ref: schema/resourceIdDto.json
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '404':
          description: No Record is found by inventory id
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'

  /linked-data/profile:
    get:
      operationId: getProfile
      tags:
        - profile
      description: Get profile
      responses:
        '200':
          description: Profile
          content:
            text/plain;charset=utf-8:
              schema:
                type: string
                example: example/profile.sample
        '404':
          description: No profile is found
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'

  /linked-data/resource/{id}/graph:
    get:
      operationId: getResourceGraphById
      tags:
        - graph
      description: Get a resource graph by id
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: Resource graph as json string
          content:
            application/json:
              schema:
                $ref: schema/graphDto/resourceGraphDto.json
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '404':
          description: No Resource graph is found by id
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'

  /linked-data/authority-assignment-check:
    post:
      operationId: authority-assignment-check
      tags:
        - authority
      description: Checks if authority can be assigned to work
      requestBody:
        content:
          application/json:
            schema:
              $ref: schema/assignmentCheckDto.json
      responses:
        '200':
          description: Returns plain text boolean as response
          content:
            text/plain:
              schema:
                type: string
                example: true|false
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'

components:
  parameters:
    id:
      name: id
      in: path
      required: true
      description: Linked Data resource id
      schema:
        type: integer
        format: int64
    inventoryId:
      name: inventoryId
      in: path
      required: true
      description: Linked Data resource inventory id
      schema:
        type: string
    full:
      name: full
      in: query
      required: false
      description: Reindex all records if true, otherwise only not indexed
      schema:
        type: boolean

  schemas:
    errorResponse:
      $ref: schema/error/errors.json

  responses:
    badRequestResponse:
      description: Validation errors
      content:
        application/json:
          example: examples/validationErrorResponse.sample
          schema:
            $ref: "#/components/schemas/errorResponse"
    internalServerErrorResponse:
      description: When unhandled exception occurred during code execution, e.g. NullPointerException
      content:
        application/json:
          example: example/unknownError.sample
          schema:
            $ref: "#/components/schemas/errorResponse"

